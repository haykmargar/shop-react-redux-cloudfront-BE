service: product-service
frameworkVersion: '3'
variablesResolutionMode: 20210219

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: eu-central-1
  profile: Hayko
  environment:
    ENV_STAGE: ${opt:stage, 'dev'}
    PRODUCTS_TABLE: ${self:resources.Resources.ProductsTable.Properties.TableName}
    STOCK_TABLE: ${self:resources.Resources.StockTable.Properties.TableName}

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true

resources:
  Resources:
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: products
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    StockTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: stock
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: S
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

functions:
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          path: products
          method: get
          cors: true

  getProductById:
    handler: handler.getProductById
    events:
      - http:
          path: products/{productId}
          method: get
          cors: true
          request:
            parameters:
              paths:
                productId: true

  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: products
          method: post
          cors: true
